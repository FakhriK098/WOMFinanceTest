// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button atom matches snapshot (default) 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "#4F46E5",
        "borderRadius": 12,
        "paddingVertical": 14,
      },
      undefined,
      undefined,
    ]
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <Text
      style={
        [
          {
            "color": "#FFFFFF",
            "fontSize": 16,
            "fontWeight": "700",
          },
          undefined,
        ]
      }
    >
      Snapshot
    </Text>
  </View>
</View>
`;

exports[`Button atom shows loader and disables when loading 1`] = `
<View
  accessibilityRole="button"
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onBlur={[Function]}
  onClick={[Function]}
  onFocus={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    [
      {
        "alignItems": "center",
        "backgroundColor": "#4F46E5",
        "borderRadius": 12,
        "paddingVertical": 14,
      },
      {
        "opacity": 0.6,
      },
      undefined,
    ]
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "flexDirection": "row",
      }
    }
  >
    <ActivityIndicator
      color="#FFFFFF"
      style={
        {
          "marginRight": 8,
        }
      }
    />
    <Text
      style={
        [
          {
            "color": "#FFFFFF",
            "fontSize": 16,
            "fontWeight": "700",
          },
          undefined,
        ]
      }
    >
      Loading
    </Text>
  </View>
</View>
`;
